# Generated by Django 3.0 on 2020-08-11 12:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('prospector', '0020_auto_20200624_1552'), ('prospector', '0021_auto_20200626_0842'), ('prospector', '0022_auto_20200628_1304'), ('prospector', '0023_auto_20200719_1323')]

    dependencies = [
        ('prospector', '0019_auto_20200518_1704'),
    ]

    operations = [
        migrations.AlterField(
            model_name='event',
            name='date',
            field=models.DateField(verbose_name='Date (YYYY-MM-JJ)'),
        ),
        migrations.CreateModel(
            name='Fanzine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=128, verbose_name='NOM Prénom')),
                ('age', models.CharField(default='', max_length=128, verbose_name='Age')),
                ('email', models.CharField(max_length=128, verbose_name='Adresse e-mail')),
                ('phone_number', models.CharField(max_length=16, verbose_name='Numéro de téléphone')),
                ('activities', models.CharField(default='', max_length=512, verbose_name='Activités supplémentaires')),
                ('blog_url', models.CharField(default='', max_length=128, verbose_name='Site/Blog/Autre')),
                ('deadline', models.CharField(default='', max_length=128, verbose_name='Date limite pour être prévenu')),
                ('deco', models.BooleanField(default=False, verbose_name='Interessé à participer aux atelier déco')),
                ('deviant_url', models.CharField(default='', max_length=128, verbose_name='Page DeviantArt')),
                ('electric_needs', models.CharField(blank=True, default='', max_length=512, verbose_name='Besoins électriques importants')),
                ('facebook_url', models.CharField(default='', max_length=128, verbose_name='Page Facebook')),
                ('image_url', models.CharField(default='', max_length=128, verbose_name="URL d'une image du stand")),
                ('logistic_needs', models.CharField(default='', max_length=512, verbose_name='Besoins logistiques')),
                ('num_people', models.CharField(default='', max_length=128, verbose_name='Nombre de personnes présentes')),
                ('prev_editions', models.IntegerField(default=0, verbose_name='Participation aux précédentes éditions')),
                ('remarks', models.CharField(default='', max_length=512, verbose_name='Remarques')),
                ('second_chance', models.BooleanField(default=False, verbose_name='Si pas choisi mais des places se libèrent, interessé à venir ?')),
                ('stand_content', models.CharField(default='', max_length=512, verbose_name='Contenu du stand')),
                ('stand_description', models.TextField(default='', verbose_name='Description du stand')),
                ('stand_name', models.CharField(default='', max_length=128, verbose_name='Nom du stand')),
                ('tables', models.CharField(default='', max_length=128, verbose_name='Nombre de tables souhaité')),
                ('total_score', models.IntegerField(default=0)),
                ('address_city', models.CharField(default='', max_length=128, verbose_name='Adresse: Code postal / Ville')),
                ('address_street', models.CharField(default='', max_length=128, verbose_name='Adresse: Rue / n°')),
            ],
        ),
        migrations.CreateModel(
            name='FanzineRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=128)),
                ('score', models.IntegerField()),
                ('comment', models.CharField(max_length=1024)),
                ('fanzine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prospector.Fanzine')),
            ],
        ),
        migrations.AlterField(
            model_name='event',
            name='date',
            field=models.DateField(verbose_name='Date'),
        ),
    ]
